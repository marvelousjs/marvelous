/*
 * this file is automatically generated for marvelous via zappjs
 * any manual changes to this file will be overwritten with the "mvs" command
 */

import { GatewayContentType } from 'marvelous';

import { I{{{case gatewayName 'pascal'}}}GatewayUser } from '../..';

{{#each route.methods}}
export interface I{{{case name 'pascal'}}}Handler {
  (request?: I{{{case name 'pascal'}}}Request): Promise<I{{{case name 'pascal'}}}Response>;
}

export interface I{{{case name 'pascal'}}}Request {
  {{#if request.body}}
  body: I{{{case name 'pascal'}}}RequestBody;
  {{/if}}
  {{#if request.params}}
  params: I{{{case name 'pascal'}}}RequestParams;
  {{/if}}
  {{#if request.query}}
  query: I{{{case name 'pascal'}}}RequestQuery;
  {{/if}}
  headers?: {
    authorization?: string;
    contentType?: GatewayContentType;
  }
  token?: string;
  user: I{{{case ../gatewayName 'pascal'}}}GatewayUser;
}

export interface I{{{case name 'pascal'}}}Response {
  statusCode: number;
  {{#if response.body}}
  body: I{{{case name 'pascal'}}}ResponseBody;
  {{/if}}
  headers?: {
    contentType?: GatewayContentType;
  }
}
{{#if request.body}}

{{{tsInterface (concat name 'RequestBody') request.body}}}
{{/if}}
{{#if request.params}}

{{{tsInterface (concat name 'RequestParams') request.params}}}
{{/if}}
{{#if request.query}}

{{{tsInterface (concat name 'RequestQuery') request.query '  ' 'string'}}}
{{/if}}
{{#if response.body}}

{{{tsInterface (concat name 'ResponseBody') response.body}}}
{{/if}}
{{/each}}
